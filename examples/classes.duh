// Classes are mutable by default and are passed as references.
// All objects can be deeply copied by calling a universal ".clone()" method on them.
class Person {
    name: String
    age: Int

    new(name: String, age: Int) {
        this.name = name
        this.age = age
    }

    get_name() -> String {
        this.name
    }

    set_name(name: String) {
        this.name = name
    }

    greet() {
        print($"Hello, my name is {this.name} and I am {this.age} years old!")
    }
}

// Usage

let Jake = Person("Jake", 36)
let name = Jake.get_name()
Jake.greet()

// Errors
class Person {
    name: String = "" // ERROR: can only assign in constructor or methods.
    age: Int
}

// Examples of default behavior
class Person {
    name: String
    age: Int

    new() {
        this.name = ""
        this.age = 0
    }

    set_age(age: Int) {
        this.age = age
    }
}